 --> User provided command line run_dir argument : ../runs/results_for_RL_paper
 --> User provided command line ae argument : 1
 --> Setting global random seed 0.
 --> Running on cpu.
 --> Number of threads : 10
 --> Number of interop threads : 10
 --> PyTorch configurations


 --> Submodule encoder layers :
ModuleList(
  (0): Linear(in_features=8, out_features=8, bias=True)
)


 --> Submodule decoder layers :
ModuleList(
  (0): Linear(in_features=8, out_features=8, bias=True)
)
 --> Model Compilation step complete.
┏━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┓
┃   ┃ Name       ┃ Type       ┃ Params ┃
┡━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━┩
│ 0 │ submodules │ ModuleDict │    144 │
└───┴────────────┴────────────┴────────┘
Trainable params: 144                                                                                                       
Non-trainable params: 0                                                                                                     
Total params: 144                                                                                                           
Total estimated model params size (MB): 0                                                                                   
 --> Example Input : 
{'x1tox8': tensor([-1.7234, -1.7234, -1.7234, -1.7234, -1.7234, -1.7234, -1.7234, -1.7234])}


--> Model Trace : 


 ---------------------------------- 
module_name:encoder
input id:['x1tox8']
input to submodule :
tensor([-1.7234, -1.7234, -1.7234, -1.7234, -1.7234, -1.7234, -1.7234, -1.7234])
output id:encoder
output from submodule :
tensor([-3.0819,  0.8039, -2.0113,  0.2947,  1.3751,  0.7868,  1.3663, -0.7757],
       grad_fn=<AddBackward0>)
Submodule output dictionary :
{'encoder': tensor([-3.0819,  0.8039, -2.0113,  0.2947,  1.3751,  0.7868,  1.3663, -0.7757],
       grad_fn=<AddBackward0>)}
 ---------------------------------- 




 ---------------------------------- 
module_name:decoder
input id:['encoder']
input to submodule :
tensor([-3.0819,  0.8039, -2.0113,  0.2947,  1.3751,  0.7868,  1.3663, -0.7757],
       grad_fn=<CatBackward0>)
output id:decoder
output from submodule :
tensor([-2.0678, -0.4946,  1.0599,  1.3069,  1.9391,  0.0996,  0.0769, -0.2799],
       grad_fn=<AddBackward0>)
Submodule output dictionary :
{'decoder': tensor([-2.0678, -0.4946,  1.0599,  1.3069,  1.9391,  0.0996,  0.0769, -0.2799],
       grad_fn=<AddBackward0>),
 'encoder': tensor([-3.0819,  0.8039, -2.0113,  0.2947,  1.3751,  0.7868,  1.3663, -0.7757],
       grad_fn=<AddBackward0>)}
 ---------------------------------- 


