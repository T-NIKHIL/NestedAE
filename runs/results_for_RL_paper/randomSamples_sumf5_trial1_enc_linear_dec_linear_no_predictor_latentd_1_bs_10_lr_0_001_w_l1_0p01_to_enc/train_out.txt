 --> User provided command line run_dir argument : ../runs/results_for_RL_paper
 --> User provided command line ae argument : 1
 --> Setting global random seed 0.
 --> Running on cpu.
 --> Number of threads : 10
 --> Number of interop threads : 10
 --> PyTorch configurations


 --> Submodule encoder layers :
ModuleList(
  (0): Linear(in_features=8, out_features=1, bias=True)
)


 --> Submodule decoder layers :
ModuleList(
  (0): Linear(in_features=1, out_features=8, bias=True)
)
 --> Model Compilation step complete.
┏━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┓
┃   ┃ Name       ┃ Type       ┃ Params ┃
┡━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━┩
│ 0 │ submodules │ ModuleDict │     25 │
└───┴────────────┴────────────┴────────┘
Trainable params: 25                                                                        
Non-trainable params: 0                                                                     
Total params: 25                                                                            
Total estimated model params size (MB): 0                                                   
 --> Example Input : 
{'x1tox8': tensor([ 0.1866, -1.4651,  0.0727, -0.8866, -0.8345, -0.8762,  0.3883,  1.4062]), 'f1tof4': tensor([-0.7824,  0.4173,  0.2019, -0.1245]), 'f5': tensor([-1.2556])}


--> Model Trace : 


 ---------------------------------- 
module_name:encoder
input id:['x1tox8']
input to submodule :
tensor([ 0.1866, -1.4651,  0.0727, -0.8866, -0.8345, -0.8762,  0.3883,  1.4062])
output id:encoder
output from submodule :
tensor([1.3774], grad_fn=<AddBackward0>)
Submodule output dictionary :
{'encoder': tensor([1.3774], grad_fn=<AddBackward0>)}
 ---------------------------------- 




 ---------------------------------- 
module_name:decoder
input id:['encoder']
input to submodule :
tensor([1.3774], grad_fn=<CatBackward0>)
output id:decoder
output from submodule :
tensor([ 0.4841, -0.1598,  0.5527, -0.2274,  1.0961, -1.4008, -0.9043, -0.2344],
       grad_fn=<AddBackward0>)
Submodule output dictionary :
{'decoder': tensor([ 0.4841, -0.1598,  0.5527, -0.2274,  1.0961, -1.4008, -0.9043, -0.2344],
       grad_fn=<AddBackward0>),
 'encoder': tensor([1.3774], grad_fn=<AddBackward0>)}
 ---------------------------------- 


